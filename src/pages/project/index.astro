---
import Layout from '~/layouts/PageLayout.astro';

import Header from '~/components/widgets/Header.astro';
import Hero2 from '~/components/widgets/Hero2.astro';
import Steps2 from '~/components/widgets/Steps2.astro';
import Hero from '~/components/widgets/Hero.astro';
import Content from '~/components/widgets/Content.astro';
import CallToAction from '~/components/widgets/CallToAction.astro';


import { headerData } from '~/data';

const meta = {
  title: 'Sub projects',
};
---

<Layout {meta}>
  <Fragment slot="header">
    <Header
      {...headerData}
      actions={[
        // {
        //   type: "ghost",
        //   text: 'Login',
        //   href: '#',
        // },
        // {
        //   type: "primary",
        //   text: 'Sign Up',
        //   href: '#',
        // },
      ]}
      isSticky
    />
  </Fragment>

  <!-- Hero2 Widget ******************* -->

  <!-- <Hero2
    callToAction={{ text: 'Source Code', href: 'https://github.com/Xplane11-WebRTC' }}
  
    image={{ src: import('~/assets/images/wallapaper-737-runway.png'), alt: 'Xplane Hero Image' }}
  >
    <Fragment slot="title">
      Xplane <br />
      <span class="text-accent dark:text-white highlight"> Web</span>RTC
    </Fragment>

    <Fragment slot="subtitle">
      <span class="hidden sm:inline">
        <span class="font-semibold">The Xplane WebRTC</span> project takes inspiration from Google Stadia for a streaming based solution for playing video games. But our plan is to build one specifically for flight simulators. </span
      >
      <span class="block mb-1 sm:hidden font-bold text-blue-600"></span>The entire project is Open source.
    </Fragment>
  </Hero2> -->

  <Hero
>
  <Fragment slot="title">
    Sub projects
  </Fragment>
</Hero>

  <!-- Content Widget **************** -->

  <Content
  isReversed
  items={[
    {
      title: 'Prioritising IPV6 over IPV4 address.',
    },
    {
      title: 'Preference of using nodes close by.',
    },
    {
      title: 'Self learning by traversing through the network.',
    },
    {
      title: 'Lighter version of container orchestration.',
    },
    {
      title: 'Focuses on making users focus on the instructions to execute rather than the virtualization itself ',
    },
  ]}
  image={{
    src: import('~/assets/images/p2prc-dark-background.png'),
    alt: 'Colorful Image',
  }}
>

  <Fragment slot="content">
    <h3 class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2">P2PRC</h3>
    The main aim of this project was to create a custom peer to peer network. The user acting as the client has 
    total flexibility on how to batch the tasks and the user acting as the server has complete flexibility on tracking 
    the containerâ€™s usages and killing the containers at any point of time.
  </Fragment>
</Content>

<CallToAction
callToAction={{
  text: 'Source Code',
  href: 'https://github.com/Akilan1999/p2p-rendering-computation',
}}
>
  <Fragment slot="title">
    More information about p2prc.
  </Fragment>
  </CallToAction>

  <!-- Content Widget **************** -->

  <Content
    items={[
      {
        title: 'Start screenshare on a remote machine in an automated way.',
      },
      {
        title: 'support for Barrier KVM for remote inputs.',
      },
      {
        title: 'Automated way to trigger a binary on Screenshare.',
      },
    ]}
    image={{
      src: import('~/assets/images/remotegaming.png'),
      alt: 'Colorful Image',
    }}
  >
    <Fragment slot="content">
      <h3 class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2">Remote Gameplay</h3>
      The aim of this project is develop a WebRTC screenshare designed for streaming video games and accepting remote inputs.There will be ansible instructions which can be executed inside into any virtual environment. 
      This will be a plugin which complements the project P2PRC.
    </Fragment>
  </Content>

  <CallToAction
    callToAction={{
      text: 'Source Code',
      href: 'https://github.com/Akilan1999/remotegameplay',
    }}
  >
  <Fragment slot="title">
    More information about Remote Gaming.
  </Fragment>
  </CallToAction>

  <!-- Content Widget **************** -->

  <!-- <Content
    isReversed
    items={[
      {
        title: 'Per ei quaeque sensibus',
        description:
          'Ex usu illum iudico molestie. Pro ne agam facete mediocritatem, ridens labore facete mea ei. Pro id apeirian dignissim.',
      },
      {
        title: 'Cu imperdiet posidonium sed',
        description:
          'Amet utinam aliquando ut mea, malis admodum ocurreret nec et, elit tibique cu nec. Nec ex maluisset inciderint, ex quis.',
      },
      {
        title: 'Nulla omittam sadipscing mel ne',
        description:
          'At sed possim oporteat probatus, justo graece ne nec, minim commodo legimus ut vix. Ut eos iudico quando soleat, nam modus.',
      },
    ]}
    image={{
      src: import('~/assets/images/caos.jpg'),
      alt: 'Colorful Image',
    }}
  >
    <Fragment slot="content">
      <h3 class="text-2xl font-bold tracking-tight dark:text-white sm:text-3xl mb-2">Ad vix debet docendi</h3>
      Ne dicta praesent ocurreret has, diam theophrastus at pro. Eos etiam regione ut, persius eripuit quo id. Sit te euismod
      tacimates.
    </Fragment>
  </Content> -->

  <!-- Steps2 Widget ****************** -->

  <!-- <Steps2
    title="Sed ac magna sit amet risus tristique interdum, at vel velit in hac habitasse platea dictumst."
    subtitle="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi sagittis, quam nec venenatis lobortis, mi risus tempus nulla, sed porttitor est nibh at nulla. Praesent placerat enim ut ex tincidunt vehicula. Fusce sit amet dui tellus."
    callToAction={{
      text: 'Get template',
      href: 'https://github.com/onwidget/astrowind',
      icon: 'tabler:download',
    }}
    items={[
      {
        title: 'Responsive Elements',
        description:
          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi sagittis, quam nec venenatis lobortis, mi risus tempus nulla.',
      },
      {
        title: 'Flexible Team',
        description:
          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi sagittis, quam nec venenatis lobortis, mi risus tempus nulla.',
      },
      {
        title: 'Ecologic Software',
        description:
          'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi sagittis, quam nec venenatis lobortis, mi risus tempus nulla.',
      },
    ]}
  /> -->

  <!-- CallToAction Widget *********** -->

  <!-- <CallToAction
    callToAction={{
      text: 'View projects',
      href: 'https://github.com/onwidget/astrowind',
    }}
  >
    <Fragment slot="title">
      Sub + <br class="block sm:hidden" /><span class="sm:whitespace-nowrap"> projects</span>
    </Fragment>

    <Fragment slot="subtitle">
      We have own style when it comes it building bring things together <br class="hidden md:inline" />Yes we 
      are reinventing the wheel! :P
    </Fragment>
  </CallToAction> -->
</Layout>
